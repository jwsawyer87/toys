#! /usr/bin/python

import sys
import os
import string

def process(file, name):
  global verbose, wantText, wantBinary

  desired = False

  # read the data in blocks to allow for interrupts
  data = ""
  done = False
  while not done:
    block = file.read(32768)
    if block:
      data += block
    else:
      done = True

  isEmpty = len(data) == 0
  data = data.translate(string.maketrans('',''), string.printable) # remove printables and whitespace
  if isEmpty:
    status = "empty"
  else:
    status = "text" if len(data) == 0 else "binary"

  if verbose:
    print "%s: %s" % (name, status)
    desired = True
  elif wantText and (status == "text"):
    print name
    desired = True
  elif wantBinary and (status == "binary"):
    print name
    desired = True

  return 0 if desired else 1

exceptions = 0

wantText = False
wantBinary = False

pgm = os.path.basename(sys.argv[0])
if pgm.startswith("istext"):
  wantText = True
elif pgm.startswith("isbin"):
  wantBinary = True

verbose = not (wantText or wantBinary)

argStart = 1
if (len(sys.argv) >= 2) and (sys.argv[1] == "-v" or sys.argv[1] == "--verbose"):
  verbose = True
  argStart += 1

if argStart+1 > len(sys.argv):
  if os.isatty(0):
    raise Exception("stdin is not redirected")
  verbose = True
  exceptions += process(sys.stdin, "<stdin>")
else:
  for filename in sys.argv[argStart:]:
    try:
      file = open(filename)
      exceptions += process(file, filename)
      file.close()
    except Exception as e:
      if verbose:
        print e

if exceptions > 0:
  exit(1)
