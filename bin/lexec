#! /usr/bin/python

import os
import os.path
import sys
import re

def debug(msg):
  if verbose:
    sys.stderr.write(msg + "\n")

verbose = False
args = sys.argv[1:]

if args and (args[0] == "--debug"):
  verbose = not verbose
  args.pop(0)

if not args:
  sys.stderr.write("Syntax %s pat1 [pat2 ...]\n" % sys.argv[0])
  exit(1)

positivePats = []
negativePats = []

for pat in args:
  if pat and (pat[0] == '!'):
    negativePats.append(re.compile(pat[1:]))
  else:
    positivePats.append(re.compile(pat))

history = set()

# Real Unix and CYGWIN separate paths in a list with a colon but Git bash uses a semicolon
dirs = re.split('[;:]', os.environ["PATH"])
for dir in dirs:
  debug("raw dir {dir}".format(**locals()))
  if dir not in history:
    history.add(dir)
    if os.path.isdir(dir):
      debug("good dir {dir}".format(**locals()))
      files = os.listdir(dir)
      for file in files:
        path = os.path.join(dir, file)
        debug("testing {path}".format(**locals()))
        if os.path.isfile(path) and os.access(path, os.X_OK):
          candidate = False
          for pat in positivePats:
            if pat.search(file):
              candidate = True
              break
          if candidate:
            for pat in negativePats:
              if pat.search(file):
                candidate = False
                break
          if candidate:
            print path
