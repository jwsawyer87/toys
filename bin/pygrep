#! /usr/bin/python

import re
import sys
import getopt

def syntax(msg=None):
  if msg:
    sys.stderr.write('{msg}\n'.format(**locals()))
  sys.stderr.write("Syntax: %s [-ivn] regexp [file ...]\n" % sys.argv[0])
  exit(1)

ignoreCase = False
negate = False
numbers = False
excludes = []

after = 0
before = 0

def process(filename=None):
  if filename:
    f = open(filename, "r")
  else:
    f = sys.stdin

  lines = f.read().splitlines()
  data = '\n'.join(lines)
  newlines = [pos for pos in range(len(data)) if data[pos] == '\n']
  for match in regexp.finditer(data):
    pos = 0
    while pos < len(newlines):
      if match.start() < newlines[pos]:
        break
      else:
        pos += 1
    line = lines[pos]
    tmp = line
    for exclude in excludes:
      tmp = exclude.sub("", tmp)
    match = regexp.search(tmp)
    if (match and (not negate)) or ((not match) and negate):
      if before or after:
        print '-'*50
      first = max(0, pos-before)
      last = min(len(lines)-1, pos+after)
      for curr in range(first, last+1):
        if filename:
          sys.stdout.write(filename)
          if numbers: sys.stdout.write(' ')
        if numbers:
          sys.stdout.write(curr+1)
        if filename or numbers:
          sys.stdout.write(':')
        sys.stdout.write("%s\n" % lines[curr])
    
  if filename:
    f.close()

(opts,args) = getopt.getopt(sys.argv[1:], "x:nviA:B:C:", [])
for (opt,arg) in opts:
  if opt == "-v":
    negate = not negate
  elif opt == "-i":
    ignoreCase = not ignoreCase
  elif opt == "-n":
    numbers = not numbers
  elif opt == "-x":
    excludes.append(re.compile(arg, flags=re.IGNORECASE if ignoreCase else 0))
  elif opt == "-A":
    after = int(arg)
  elif opt == "-B":
    before = int(arg)
  elif opt == "-C":
    after = int(arg)
    before = int(arg)
  else:
    syntax("Unhandled option: {opt!r}".format(**locals()))

if negate and (before or after):
  syntax('-A, -B, and -C are incompatible with negative searches')
  
if not args:
  syntax()

regexp = re.compile(args.pop(0), flags=(re.IGNORECASE if ignoreCase else 0) + re.DOTALL)

if args:
  for filename in args:
    process(filename)
elif sys.stdin.isatty():
  sys.stderr.write("stdin must be redirected\n")
  exit(1)
else:
  process()
