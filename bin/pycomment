#! /usr/bin/env python

"""
   A vi command to comment-out and un-comment a section of Python code
"""

import re
import sys

def sneaky_assert(assertion, nastygram):
  global errors
  value = eval(assertion)
  if not value:
    with open('/dev/tty', 'w') as stream:
      stream.write('Assertion failed: {assertion!r}: {nastygram}\n'.format(**locals()))
    errors += 1
    return False
  return True

assert 'not sys.stdin.isatty()', 'stdin must be redirected'

errors = 0
regexp = re.compile('^( *)\S.*$')
lines = sys.stdin.read().splitlines()
newlines = lines

match = regexp.search(lines[0])
if sneaky_assert('match', '{line!r} does not match {pattern!r}'.format(line=lines[0], pattern=regexp.pattern)):
  prefix = match.group(1)
  length = len(prefix)
  regexp = re.compile('^ {{{length}}}(.*)$'.format(**locals()))
  newlines = []
  for line in lines:
    if line:
      match = regexp.search(line)
      if sneaky_assert('match', '{line!r} does not match {pattern!r}'.format(pattern=regexp.pattern, **locals())):
        if match.group(1):
          if match.group(1).startswith('#'):
            if match.group(1).startswith('# '):
              line = prefix + match.group(1)[2:]
            else:
              line = prefix + match.group(1)[1:]
          else:
            line = prefix + '# ' + match.group(1)
    newlines.append(line)

if errors:
  print '\n'.join(lines)
else:
  print '\n'.join(newlines)
