#! /usr/bin/python

import sys
import getopt

def toLeft(s, width):
  return s.ljust(width)

def toRight(s, width):
  return s.rjust(width)

def toCenter(s, width):
  return s.center(width)

def process(lines):
  maxWidth = max([len(line) for line in lines])
  print "%s%s%s" % (topLeftCorner, horizontal * (maxWidth+2), topRightCorner)
  for line in lines:
    if verbose:
      print ["%s:%d" % (c, ord(c)) for c in line]
    print "%s %s %s" % (vertical, just(line, maxWidth), vertical)
  print "%s%s%s" % (bottomLeftCorner, horizontal * (maxWidth+2), bottomRightCorner)

horizontal = unichr(9473)
vertical = unichr(9475)

topLeftCorner = unichr(9487)
topRightCorner = unichr(9491)
bottomLeftCorner = unichr(9495)
bottomRightCorner = unichr(9499)

box = True

just = toLeft
fillChar = '#'

verbose = False

(opts, args) = getopt.getopt(sys.argv[1:], "vxc:", ["character=", "left", "center", "right", "box"])
for (opt,arg) in opts:
  if opt == "--left":
    just = toLeft
  elif opt == "--right":
    just = toRight
  elif opt == "--center":
    just = toCenter
  elif opt in ["-c", "--character"]:
    fillChar = arg[0]
    box = False
  elif opt in ["-x", "--box"]:
    box = not box
  elif opt == "-v":
    verbose = not verbose

if not box:
  horizontal = fillChar
  vertical = fillChar

  topLeftCorner = fillChar
  topRightCorner = fillChar
  bottomLeftCorner = fillChar
  bottomRightCorner = fillChar

assert args or (not sys.stdin.isatty()), "Syntax: banner [message]"

if args:
  process([' '.join(args)])
else:
  process(sys.stdin.read().strip('\n').split('\n')) 
